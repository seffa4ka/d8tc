<?php

/**
 * @file
 * Contains sending_messages.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Mail\MailFormatHelper;

/**
 * Implements hook_help().
 */
function sending_messages_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the sending_messages module.
    case 'help.page.sending_messages':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('sending messages') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function sending_messages_theme() {
  return [
    'sending_messages' => [
      'template' => 'sending_messages',
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function sending_messages_mail($key, &$message, $params) {
  switch ($key) {
    // Send a simple message from the contact form.
    case 'email_queue':
      $message['subject'] = 'Read Now!';
      $message['body'][] = MailFormatHelper::htmlToText($params['message']);
      break;
  }
}

/**
 * Implements hook_cron().
 */
function sending_messages_cron() {
  \Drupal::logger('sending_messages')->notice('hook_cron');
  $ids = \Drupal::entityQuery('users_entity')
    ->condition('field_status', 0)
    ->range(0, 1)
    ->execute();
  $users = \Drupal::entityTypeManager()->getStorage('users_entity')->loadMultiple($ids);
  foreach ($ids as $id) {
    $data['uid'] = $users[$id]->id->value;
    $queue = \Drupal::queue('email_queue');
    $queue->createQueue();
    $queue->createItem($data);
  }
}
